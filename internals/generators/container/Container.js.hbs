/**
*
* {{properCase name }}
*
*/

{{#if memo}}
import React, { useContext, memo } from 'react'
{{else}}
import React, { useContext} from 'react'
{{/if}}
// import PropTypes from 'prop-types'
{{#if connectToStore}}
import { observer } from 'mobx-react'
{{/if}}
{{#if wantHeaders}}
import { Helmet } from 'react-helmet'
{{/if}}
{{#if wantMessages}}
import { FormattedMessage } from 'react-intl'
{{/if}}
import { Header } from 'components/Header'
import { Section } from './styles'
{{#if wantMessages}}
import messages from './{{ properCase name }}.messages'
{{/if}}

{{#if connectToStore}}
import { GitHubStoreContext } from '../../stores/GithubStore'
{{/if}}

{{#if connectToStore}}
const {{ properCase name }} = observer(() => {
const gitHubStore = useContext(GitHubStoreContext)
const {isLoading} = gitHubStore

const RenderMessage = () =>
    isLoading ? (
      <FormattedMessage {...messages.loading} />
    ) : (
      <FormattedMessage {...messages.header} />
    )

  {{else}}
  const {{ properCase name}} = () => {
  {{/if}}
  return (
  <article>
    {{#if wantHeaders}}
    <Helmet>
      <title>{{properCase name}}</title>
      <meta name="description" content="Description of {{properCase name}}" />
    </Helmet>
    {{/if}}
    {{#if wantMessages}}
    <Section>
      <Header level='2'>
        <RenderMessage />
      </Header>
    </Section>
    {{/if}}
  </article>
  )
  })

  {{#if memo}}
  export default memo({{ properCase name }})
  {{else}}
  export default {{ properCase name }}
  {{/if}}